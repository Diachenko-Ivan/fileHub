plugins {
    id 'java'
    id "net.ltgt.errorprone" version "1.1.0"
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.guava:guava:${guavaVersion}"

    compile "com.sparkjava:spark-core:${sparkVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitApiVersion}"
    testImplementation "com.google.truth:truth:1.0.1"

    testCompile("org.junit.jupiter:junit-jupiter-params:${junitParamsVersion}")

    testCompile group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.4.1'
    testCompile group: 'com.google.guava', name: 'guava-testlib', version: "${guavaVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitEngineVersion}"

    implementation "com.google.code.gson:gson:${gsonVersion}"

    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    compile group: 'org.slf4j', name: 'slf4j-simple', version: "${slf4jVersion}"

    errorprone "com.google.errorprone:error_prone_core:${errorProneVersion}"
    errorproneJavac "com.google.errorprone:error_prone_core:${errorProneVersion}"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/")
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['src/io/javaclasses/filehub/web/**'])
        }))
    }
    violationRules {
        rule {
            limit {
                minimum = 0.4
            }
            failOnViolation true
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}

build.dependsOn jacocoTestCoverageVerification
